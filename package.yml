name: FunctionalJS
author: michael
category: Native
tags: [
    FunctionalJS, function, functional, functional programming,
    # Function._
    underscore, _,
    # Function.empty
    empty,
    # Function.identity
    identity,
    # Function.context
    context,
    # Function.lambda
    lambda,
    # Function.pluck
    pluck,
    # Function.invoke
    invoke,
    # Function.sequence,
    sequence,
    # Function.concatenate
    combine, concat, concatenate,
    # Function.compose
    compose,
    # Function.overload
    overload,
    # Function.and, Function.or, Function.xor
    and, or, xor,
    # Function::toFunction, Array::toFunction, Hash::toFunction, Object.toFunction
    toFunction,
    # Function::wrap
    wrap, wrapping, wrapper
    # Function::memoize
    memo, memoize, memoization, cache, caching,
    # Function::partial
    partial, default, arguments, default arguments,
    # Function::curry, Function::rcurry
    curry, rcurry,
    # Function::not
    not,
    # Function::append
    append,
    # Function::prepend
    prepend,
    # Function::saturate
    saturate,
    # Function::aritize
    aritize,
    # Function::getArgs
    getArgs, get arguments, arglist, argument, list, argument list,
    # Function::getArity
    getArity, arity, length,
    # Function::foreach, Function::each, Function::every, Function::some,
    # Function::filter, Function::map, Function::reduce, Function::reduceRight,
    # Function::sort, Function::foldl, Function::foldr
    foreach, each, every, some, filter, map, reduce, reduceRight, sort, foldl, foldr
]
current: 1.0
docs: 'http://github.com/michaelficarra/FunctionalJS/blob/master/README.md'
demo: 'http://fiddle.jshell.net/Qn7Vu/2/show/light/'
